# PEG

Expression
	= "(" (Expression)+ ")"
    / atom

atom
	= letter / number / empty

letter
	= [a-z]

number
	= [0-9]

empty
	= [ \t\n\r]

# context-free grammar

Expression
	= "(" (Expression)+ ")"
  | atom

atom
	= letter
  | number
  | empty

letter
	= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j"
  | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t"
  | "u" | "v" | "w" | "x" | "y" | "z"

number
	= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "0"

empty
	= " " | \t | \n | \r |

# attribute grammar

Expression_1
  = "(" (Expression_2)+ ")"
  {Expression_1.type = Expression_2.type}

Expression
  = atom
  {Expression.type = atom.type}

atom
  = letter / number / empty
